#!/usr/bin/perl

#
# Program Summary:
#
# Name:             dailystrips-clean
# Description:      removes all downloaded dailystrips in the current directory
#                   that are older than a specified number of days
# Author:           Andrew Medico <amedico@amedico.dhs.org>
# Created:          03 Feb 2002, 12:15 EST
# Last Modified:
# Current Revision: 1.0.1
#


# Set up
use strict;
no strict qw(refs);

use POSIX qw(strftime);
use Getopt::Long;


# Variables
my (%options, $version, $time_today, @files);

$version = "1.0.1";

$time_today = time;


# Get options
GetOptions(\%options, 'quiet|q','verbose|v','test|t','dir=s','version|v') or exit 1;


# Help and version override anything else
if ($options{'help'}) {
	print
"Usage: $0 [OPTIONS] DAYS
Any files more than DAYS days old will be removed.

Options:
  -q  --quiet                Turns off progress messages		
  -v  --verbose              Turns on extra progress information, overrides -q
  -t  --test                 Does not acutally remove files
  -d  --dir DIR              Work in specified directory instead of current
                             directory
  -V  --version              Prints version number

Bugs and comments to dailystrips\@amedico.dhs.org\n";

	exit;
}

if ($options{'version'}) {
		print "dailystrips version $version\n";
		exit;
}


unless (@ARGV[0]) {
	die "Error: no number of days specified\n";
} else {
	$options{'days'} = @ARGV[0];
}


# verbose overrides quiet
if ($options{'verbose'} and $options{'quiet'}) {
	undef $options{'quiet'};
}



# get list of existing files
if ($options{'dir'} and (not $options{'dir'} =~ /\/$/)) {
	$options{'dir'} .= "/";
}

@files = grep(/\d{4}\.\d{2}\.\d{2}/, glob("$options{'dir'}*"));
for (@files) {
	if ($options{'verbose'}) {
		print "Existing file: $_\n";
	}
}


# filter out files to keep
for (0 .. $options{'days'} - 1) {
	my $save_day = strftime("\%Y.\%m.\%d", localtime ($time_today - (86400 * $_)));
	
	unless ($options{'quiet'}) {
		print "Keeping files for: $save_day\n";
	}
	
	@files = grep(!/$save_day/, @files);	
}


# remove anything that's still on the list
for (@files) {
	if ($options{'verbose'}) {
		print "Removing file/directory: $_\n";
	}
	
	unless ($options{'test'}) {
		if (-d $_) {
			my $dir_not_empty;
			
			foreach my $sub (glob("$_/*")) {
				unless (unlink("$sub")) {
					warn "Could not remove file $sub: $!\n";
					$dir_not_empty = 1;
				}
			}
			
			if ($dir_not_empty) {
				warn "Directory $_ not empty, cannot remove\n";
			} else {
				rmdir($_) or warn "Could not remove directory $_: $!\n";
			}
		}
		
		else {
			unlink($_) or warn "Could not remove file $_: $!\n";
		}
	}
}