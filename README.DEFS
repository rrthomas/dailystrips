This file describes in further detail how the strips.defs file is contsructed.

Strips can be defined in one of two ways. The first is standalone. Also, strips
can be provide the image URL by generating it (as from the current date) or by
searching a web page for a URL. Let's look at an example of generating first:

>strip badtech
>	name Badtech
>	homepage http://www.badtech.com/
>	type generate
>	imageurl http://www.badtech.com/a/%-y/%-m/%-d.jpg
>end

In the first line, we specify the short name of the strip that will be used to
refer to it on the command line. This must be unique. Next, 'name' specifies the
name of the strip to display in the HTML output. 'homepage' is the address of
the strip's homepage, use for the link in the output. 'type' can be either
'generate' or 'search'. Here we are using 'generate' to generate a URL.
'imageurl' is the address of the image. You are allowed to use a number of
special variables beginning with the '%' symbol. Single letters such as "%Y",
"%d", "%m", etc. are interpreted as date variables and passed to the strftime
function for conversion. 'date --help' provides a reference that is compatible.
You can also use a "%" followed by any of the above variables, such as
'%homepage'. This will simply subsititute 'http://www.badtech.com' in place of
'%homepage'.


The other type of URL generation, searching, is as follows:

strip joyoftech
	name The Joy of Tech
	homepage http://www.joyoftech.com/joyoftech/
	type search
	searchpattern <IMG(.*?)src="(joyimages/\d+\.gif)\"(.*?)>
	matchpart 2
	baseurl http://www.joyoftech.com/joyoftech/
	updated semidaily
end

'strip', 'name', and 'homepage' all function as above. The difference is the
'type search' line and the lines that follow. 'searchpattern' is a Perl regular
expression that must be written to match the strip's URL. Not shown is
'searchpage', which would ordinarily go above 'searchpatter'. This is a URL to
a web page and is only needed if the URL to the strip image is not found on the
homepage. The same special variables listed above for 'imageurl' may also be
used here. 'matchpart' tells the script witch parenthetical section (there must
be at least one) will contain the desired URL (see man perlre on $n variables
for more). 'baseurl' only needs to be specified if the 'searchpattern' regular
expression does not match a full URL (that is, it does not start with http://
and contain the host). If specified, it is prepended to whatever 'searchpattern'
matched. The 'updated semidaily' line is used is a strip is not updated every
day. If this line is not specified, the program assumes that the site provides a
new strip every day and will not download the same strip two days in a row
(instead, it will put an error message in place of the image). If the strip of
only updated every few days, specify 'updated semidaily' and the script will
download the current image, regardless of whether it is the same as a previous
day or not. There is also an additional variable not shown: 'referer'. Some
webservers insist that the HTTP_REFERER header be set to the address of the HTML
page that the image is on, or they will not return the image. This is to prevent
other sites from linking to the image and (presumably) scripts like this from
functioning. What the script does by default is set the HTTP_REFERER header to
the searchpage (if specified), or the homepage (if no specific searchpage was
specified). If the webserver for some reason needs a referer other than the
searchpage or homepage, it can be specified with this variable.

The other method of specifying strips is to use classes. This method is used
when there are serveral strips provided by the same webserver that all have an
identical definition, except for some strip-specific elements. Classes work as
follows:

First, the class is declared:
>class ucomics-srch
>	homepage http://www.ucomics.com/%strip/view%1.htm
>	type search
>	searchpattern (/%1/(\d+)/%1(\d+)\.(gif|jpg))
>	matchpart 1
>	baseurl http://images.ucomics.com/comics
>end

This is just like a strip definition, except 'class' is the first line. The
value for 'class' must be unique among other classes but will not conflict with
the names of strips. Strip-specific elements are specified using special
variables '%x', where 'x' is a number from 1 to 9. When the definition file is
parsed, these variables are retrieved from the strip definition, shown below.

strip calvinandhobbes
	name Calvin and Hobbes
	useclass ucomics-srch
	%1 ch
end

This definition is like a norman definition except the second line is 'useclass'
followed by the name of the class to use. Below that, the strip-specific '%x'
variables must be specified. Values already declared in the class can be
overridden (if necessary) by simply specifying them in the strip definition.


Notes:

* For classes, variables declared in the strip definition take precedence over
  those specified in the class, if there is any conflict

* You cannot use '%varaiablename' to refer to a variable below the current line
  (assuming that you use the standard order) if the referenced variable is a
  reference itself - the script only parses '%variablename' references once.
  This is a bug and is scheduled to be fixed.

* If no 'searchpage' is specified for definitions of type 'search', the value of
  'homepage' is used.

* If no 'referer' is specified, the value of 'searchpage' is used. If this has
  not been set (in the case of definitions that generate the URL or search
  definitions that use the homepage as the seachrpage), the value of 'homepage'
  is used.

* There may be additional problems lurking in the defintion file-parsing code.
  It currently works fairly well, but needs to be re-written properly.